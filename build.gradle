import com.moowork.gradle.node.task.NodeTask

buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
	}
}

plugins {
	id "com.moowork.node" version "1.1.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "com.moowork.node"

node {
	version = '5.8.0'
	npmVersion = '3.8.0'
	download = true
	// distBaseUrl = Custom artifactory location here.
}

jar {
	baseName = 'spring-boot-react'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile("org.springframework.boot:spring-boot-starter-jdbc")
	compile("org.springframework.boot:spring-boot-devtools")
	compile("org.springframework:spring-jdbc")
	compile("com.auth0:java-jwt:3.0.1")
	compile("javax.mail:mail:1.5.0-b01")
	compile("mysql:mysql-connector-java:5.1.6")
	testCompile('org.springframework.boot:spring-boot-starter-test')
}



task webpack(type: NodeTask, dependsOn: 'npmInstall') {
	println "running webpack"
	def osName = System.getProperty("os.name").toLowerCase();
	if (osName.contains("windows")) {
		script = project.file('node_modules/webpack/bin/webpack.js')
	} else {
		script = project.file('node_modules/.bin/webpack')
	}
}

processResources.dependsOn 'webpack'

clean.delete << file('node_modules')
clean.delete << file('src/main/webapp/dist')
